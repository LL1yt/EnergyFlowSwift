#!/usr/bin/env python3
"""–ü—Ä–æ—Å—Ç–æ–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–æ—Å–µ–¥—è–º–∏"""

import torch
from new_rebuild.config import SimpleProjectConfig
from new_rebuild.core.lattice.lattice import Lattice3D

print("üîç –ü—Ä–æ—Å—Ç–æ–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–æ—Å–µ–¥—è–º–∏...")

config = SimpleProjectConfig()
print(f"üìè Lattice dimensions: {config.lattice.dimensions}")

# –°–æ–∑–¥–∞–µ–º lattice
lattice = Lattice3D()

# –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
batch_size = 1
num_cells = config.lattice.total_cells
state_size = config.model.state_size
test_states = torch.randn(batch_size, num_cells, state_size)

print(f"üìä Test states shape: {test_states.shape}")
print(f"üìä Total cells: {num_cells}")

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è
lattice.states = test_states

# –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º spatial optimizer
print(f"üîç Spatial optimizer: {type(lattice.spatial_optimizer).__name__}")
print(f"üîç MoE processor set: {lattice.spatial_optimizer.moe_processor is not None}")

# –ü—Ä–æ–≤–µ—Ä–∏–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–ª–µ—Ç–æ–∫ –≤ –∫—É–±–µ 8x8x8
# –£–≥–ª—ã: (0,0,0)=0, (7,7,7)=511
# –ì—Ä–∞–Ω–∏: (0,0,4)=32, (7,7,4)=479  
# –¶–µ–Ω—Ç—Ä: (4,4,4)=260
test_cells = [0, 32, 260, 479, 511]

print("\nüîç –ê–Ω–∞–ª–∏–∑ –∫–ª–µ—Ç–æ–∫:")
for cell_idx in test_cells:
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º linear index –≤ 3D –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
    z = cell_idx // 64  # 8*8
    y = (cell_idx % 64) // 8
    x = cell_idx % 8
    coords = (x, y, z)
    
    # –ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ–º —Ç–∏–ø –∫–ª–µ—Ç–∫–∏
    is_corner = (x in [0, 7]) and (y in [0, 7]) and (z in [0, 7])
    is_edge = sum([x in [0, 7], y in [0, 7], z in [0, 7]]) == 2
    is_face = sum([x in [0, 7], y in [0, 7], z in [0, 7]]) == 1
    is_interior = not (is_corner or is_edge or is_face)
    
    cell_type = "corner" if is_corner else "edge" if is_edge else "face" if is_face else "interior"
    
    print(f"  Cell {cell_idx:3d} at {coords}: {cell_type}")

print("\n‚úÖ Analysis completed")