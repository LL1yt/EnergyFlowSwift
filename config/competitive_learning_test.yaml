# Тестовая конфигурация для конкурентного обучения (Шаг 3.1)
# ВНИМАНИЕ: Параметры настроены для демонстрации механизмов, НЕ для production!

lattice:
  # Малая решетка для быстрого тестирования
  dimensions: [16, 16, 16] # 4096 клеток
  boundary_conditions: "walls"

  # Топология соседства
  neighbors: 26 # 3D соседство (биологически правдоподобно)
  neighbor_finding_strategy: "tiered"
  neighbor_strategy_config:
    local_tier: 0.7 # 70% локальные соседи
    functional_tier: 0.2 # 20% функциональные (spatial hashing)
    random_tier: 0.1 # 10% дальние стохастические
    local_grid_cell_size: 8 # Размер spatial hash bins

  # Инициализация и производительность
  initialization_method: "normal"
  initialization_std: 0.1
  seed: 42
  gpu_enabled: true
  parallel_processing: true

  # === STDP МЕХАНИЗМ (ТЕСТОВЫЕ ПАРАМЕТРЫ) ===
  enable_plasticity: true
  plasticity_rule: "stdp"
  activity_history_size: 10 # Консервативная история (memory efficient)

  stdp_config:
    # ТЕСТОВЫЕ пороги и скорости (повышенная чувствительность)
    activity_threshold: 0.02 # ПОНИЖЕН для тестирования (production: 0.05-0.1)
    learning_rate: 0.02 # УВЕЛИЧЕН для быстрых изменений (production: 0.001-0.01)

    # Биологически правдоподобные STDP параметры
    A_plus: 0.02 # LTP амплитуда (увеличена для тестов)
    A_minus: 0.02 # LTD амплитуда (увеличена для тестов)
    tau_plus: 20 # LTP временная константа (ms)
    tau_minus: 20 # LTD временная константа (ms)

    # Ограничения весов (предотвращение насыщения)
    weight_bounds: [0.1, 2.0] # [min, max] - веса остаются положительными

  # === КОНКУРЕНТНОЕ ОБУЧЕНИЕ (ТЕСТОВЫЕ ПАРАМЕТРЫ) ===
  enable_competitive_learning: true
  competitive_config:
    # Winner-Take-All параметры (усиленные для демонстрации)
    winner_boost_factor: 1.1 # 10% усиление (production: 1.05)
    lateral_inhibition_factor: 0.95 # 5% ослабление (production: 0.98)

    # Нормализация весов
    enable_weight_normalization: true
    normalization_method: "proportional" # сохраняем пропорции

    # Частота применения (каждые N шагов)
    update_frequency: 1 # Применять каждый шаг (агрессивное тестирование)

    # Биологическая правдоподобность
    max_winner_connections: 8 # Максимум 8 усиленных связей на клетку
    lateral_inhibition_radius: 3.0 # Радиус латерального торможения

  # Мониторинг и диагностика
  enable_logging: true
  log_level: "INFO"
  track_performance: true
  validate_states: true

# === ГИБРИДНАЯ АРХИТЕКТУРА (NCA + GatedMLP) ===
cell_prototype:
  prototype_name: "minimal_nca_cell"

  minimal_nca_cell:
    # ОПТИМИЗИРОВАННЫЕ параметры для target_params=69
    state_size: 4 # Уменьшено для соответствия target
    neighbor_count: 26 # Синхронизируется с lattice.neighbors
    hidden_dim: 3 # Уменьшено пропорционально state_size
    external_input_size: 2 # Минимальный внешний вход

    # NCA specific parameters
    activation: "tanh" # Стабильная активация для NCA
    dropout: 0.0 # NCA не нуждается в dropout
    use_memory: false # NCA имеет implicit memory

    # КРИТИЧНО: отключение масштабирования
    enable_lattice_scaling: false
    target_params: 69 # Фиксированный target

    # NCA dynamics parameters
    alpha: 0.1 # Update strength
    beta: 0.05 # Neighbor influence

# I/O настройки
io:
  # Пропорциональное размещение I/O (как в биологии - 8-12% покрытия)
  input_face: "front"
  output_face: "back"
  placement_strategy: "proportional"
  io_strategy_config:
    min_percentage: 8.0 # Минимум 8% клеток грани
    max_percentage: 12.0 # Максимум 12% клеток грани
    seed: 42

# === МЕТАИНФОРМАЦИЯ ===
meta:
  config_type: "test"
  purpose: "Demonstration of competitive learning mechanisms"
  warning: "NOT FOR PRODUCTION - parameters tuned for visibility, not biological accuracy"
  production_config: "config/adaptive_connectivity.yaml"
  created_for: "Step 3.1 - Competitive Learning"
