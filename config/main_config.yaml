# Главная конфигурация проекта: 3D Клеточная Нейронная Сеть

# === БАЗОВЫЕ НАСТРОЙКИ ПРОЕКТА ===
project:
  name: "3D Cellular Neural Network"
  version: "0.1.0"
  description: "Исследовательский проект по созданию 3D клеточной нейронной сети"

# === НАСТРОЙКИ РЕШЕТКИ (3D СЕТКА) ===
lattice:
  # Размеры решетки (начинаем с маленьких для отладки)
  dimensions:
    depth: 5 # Глубина (ось X) - от входа к выходу
    height: 5 # Высота (ось Y)
    width: 5 # Ширина (ось Z)

  # Тип соседства (какие клетки считаются соседями)
  connectivity:
    type: "6-neighbors" # 6 соседей (верх, низ, лево, право, вперед, назад)
    include_diagonals: false # Пока не включаем диагональные связи

# === НАСТРОЙКИ КЛЕТКИ-ПРОТОТИПА ===
cell_prototype:
  # Размеры входов и выходов
  input_size: 12 # Размер входного вектора для одной клетки
  state_size: 8 # Размер внутреннего состояния клетки
  output_size: 8 # Размер выхода клетки (может равняться state_size)

  # Архитектура нейросети внутри клетки
  architecture:
    layers: 2 # Количество слоев (начинаем с простого)
    hidden_size: 16 # Размер скрытых слоев
    activation: "tanh" # Функция активации (tanh для стабильности)
    use_bias: true # Использовать смещения

# === НАСТРОЙКИ ОБУЧЕНИЯ ===
training:
  # Основные параметры
  batch_size: 4 # Размер батча (маленький для начала)
  learning_rate: 0.001 # Скорость обучения
  num_epochs: 100 # Количество эпох

  # Временные шаги распространения сигнала
  time_steps: 10 # Сколько шагов времени симулировать

  # Оптимизатор
  optimizer:
    type: "Adam" # Тип оптимизатора
    weight_decay: 0.0001 # Регуляризация

  # Функция потерь
  loss:
    type: "CrossEntropyLoss" # Для классификации токенов

# === НАСТРОЙКИ ДАННЫХ ===
data:
  # Размеры входных и выходных данных
  embedding_dim: 128 # Размерность входного эмбединга
  vocab_size: 1000 # Размер словаря токенов
  max_sequence_length: 50 # Максимальная длина выходной последовательности

  # Пути к данным
  paths:
    train_data: "data/train/"
    test_data: "data/test/"
    embeddings: "data/embeddings/"

# === НАСТРОЙКИ ВИЗУАЛИЗАЦИИ ===
visualization:
  # Что показывать
  show_lattice_state: true # Показывать состояние решетки
  show_signal_propagation: true # Анимация распространения сигнала
  save_animations: true # Сохранять анимации

  # Параметры отображения
  figure_size: [10, 8] # Размер графиков
  colormap: "viridis" # Цветовая схема
  animation_fps: 2 # Кадров в секунду для анимации

# === НАСТРОЙКИ ЛОГИРОВАНИЯ ===
logging:
  level: "INFO" # Уровень логирования (DEBUG, INFO, WARNING, ERROR)
  log_to_file: true # Записывать логи в файл
  log_file: "logs/training.log"
  log_to_console: true # Выводить логи в консоль

# === НАСТРОЙКИ УСТРОЙСТВА ===
device:
  use_gpu: true # Использовать GPU если доступен
  gpu_device: "cuda:0" # Какой GPU использовать
  fallback_to_cpu: true # Переключиться на CPU если GPU недоступен

# === НАСТРОЙКИ ЭКСПЕРИМЕНТОВ ===
experiments:
  save_checkpoints: true # Сохранять промежуточные результаты
  checkpoint_frequency: 10 # Каждые N эпох
  save_path: "checkpoints/"

  # Метрики для отслеживания
  metrics:
    - "loss"
    - "accuracy"
    - "signal_propagation_time"

# === РЕЖИМЫ РАБОТЫ ===
modes:
  debug: true # Режим отладки (много дополнительной информации)
  profile_memory: false # Профилирование памяти
  profile_time: false # Профилирование времени выполнения
