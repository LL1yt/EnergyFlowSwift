# Тестовая конфигурация для демонстрации трехуровневой (tiered) стратегии поиска соседей.
# Использует трехуровневую архитектуру: локальные + функциональные + дальние связи.

# ==================================
# Секция Решетки (Lattice)
# ==================================
lattice:
  dimensions: [10, 10, 10] # Небольшая решетка для теста
  boundary_conditions: "periodic" # Тороидальная решетка, чтобы у всех было одинаковое число локальных соседей

  # --- Новая конфигурация топологии ---
  neighbors: 26 # Общее число соседей для трехуровневой стратегии
  neighbor_finding_strategy: "tiered" # Используем трехуровневую стратегию
  neighbor_strategy_config:
    local_tier:
      radius: 3.0
      ratio: 0.5
    functional_tier:
      ratio: 0.3
    local_grid_cell_size: 3

  cache_neighbors: true # Кэшируем соседей для производительности
  seed: 42 # Для воспроизводимости случайной выборки

  cell_config:
    prototype_name: "gmlp_opt_connections"

    # Конфигурация для gmlp_opt_connections
    gmlp_opt_connections:
      state_size: 16
      hidden_dim: 64
      external_input_size: 12
      use_memory: false
      target_params: 25000

# ==================================
# Секция Клетки (Cell)
# ==================================
cell:
  # Используем gMLP, так как он лучше всего подходит для обработки большого числа соседей
  prototype_name: "gmlp_cell"

  # --- Параметры gMLP клетки ---
  gmlp_cell:
    state_size: 8 # Уменьшаем для совместимости с тестом
    neighbor_count: 26 # ВАЖНО: должно совпадать с lattice.neighbors
    hidden_dim: 64 # Уменьшаем для теста
    external_input_size: 12
    use_memory: true
    target_params: 25000

# ==================================
# Секция I/O
# ==================================
io:
  input_face: "front"
  output_face: "back"
  placement_strategy: "proportional"
  io_strategy_config:
    coverage_ratio:
      min_percentage: 10.0
      max_percentage: 20.0
    seed: 42 # Отдельный сид для размещения I/O для независимости
