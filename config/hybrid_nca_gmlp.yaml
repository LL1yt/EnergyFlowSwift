# üß¨ HYBRID NCA + GatedMLP ARCHITECTURE CONFIGURATION
# ==================================================
#
# –†–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–∞—è –≥–∏–±—Ä–∏–¥–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞:
# - MinimalNCACell –¥–ª—è –Ω–µ–π—Ä–æ–Ω–æ–≤ (state processing)
# - GatedMLPCell –¥–ª—è —Å–≤—è–∑–µ–π —Å —Å–æ—Å–µ–¥—è–º–∏ (connectivity)
# - –†–∞–∑–¥–µ–ª—å–Ω–æ–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è

# === PROJECT METADATA ===
project:
  name: "3D Cellular Neural Network - Hybrid NCA+GatedMLP"
  version: "2.1.0-hybrid"
  description: "–ë–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏ –ø—Ä–∞–≤–¥–æ–ø–æ–¥–æ–±–Ω–∞—è –≥–∏–±—Ä–∏–¥–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å MinimalNCA –Ω–µ–π—Ä–æ–Ω–∞–º–∏ –∏ GatedMLP —Å–≤—è–∑—è–º–∏"
  architecture_type: "hybrid_nca_gmlp"

# === ARCHITECTURE SELECTION ===
architecture:
  # –ì–∏–±—Ä–∏–¥–Ω—ã–π —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω
  hybrid_mode: true

  # –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –¥–ª—è –Ω–µ–π—Ä–æ–Ω–æ–≤ (state processing)
  neuron_architecture: "minimal_nca"

  # –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –¥–ª—è —Å–≤—è–∑–µ–π —Å —Å–æ—Å–µ–¥—è–º–∏ (connectivity processing)
  connection_architecture: "gated_mlp"

  # –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è NCA
  disable_nca_scaling: true

  # –†–∞–∑–¥–µ–ª—å–Ω—ã–µ target_params
  neuron_target_params: 69 # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–ª—è MinimalNCA
  connection_target_params: 10000 # –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º—ã–π –¥–ª—è GatedMLP

# === LATTICE CONFIGURATION ===
lattice_3d:
  # –¢–µ—Å—Ç–æ–≤–∞—è —Ä–µ—à–µ—Ç–∫–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞
  dimensions: [20, 20, 10] # 4,000 –∫–ª–µ—Ç–æ–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  total_cells: 4000

  # –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ production: [300, 300, 150] = 13.5M –∫–ª–µ—Ç–æ–∫
  # production_dimensions: [300, 300, 150]
  # production_total_cells: 13500000

  # –°–æ—Å–µ–¥—Å—Ç–≤–æ
  neighbors: 26 # 3D Moore neighborhood –¥–ª—è –ø–æ–ª–Ω–æ–π —Å–≤—è–∑–Ω–æ—Å—Ç–∏
  neighbor_finding_strategy: "tiered"

  # –ì—Ä–∞–Ω–∏—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
  boundary_conditions: "walls"

  # GPU optimization
  parallel_processing: true
  gpu_enabled: true
  batch_size: 4 # Adjusted for hybrid processing

  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
  initialization:
    method: "xavier_uniform"
    std: 0.02 # Conservative –¥–ª—è NCA stability
    mean: 0.0

  # –°–æ—Å–µ–¥—Å—Ç–≤–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
  neighbor_strategy_config:
    local_tier:
      radius: 3.0
      ratio: 0.7 # 70% –ª–æ–∫–∞–ª—å–Ω—ã–µ —Å–≤—è–∑–∏
    functional_tier:
      ratio: 0.2 # 20% —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ
    distant_tier:
      ratio: 0.1 # 10% –¥–∞–ª—å–Ω–∏–µ —Å—Ç–æ—Ö–∞—Å—Ç–∏—á–µ—Å–∫–∏–µ
    local_grid_cell_size: 3

# === NEURON ARCHITECTURE (MinimalNCA) ===
cell_prototype:
  prototype_name: "minimal_nca_cell"

  minimal_nca_cell:
    # –§–ò–ö–°–ò–†–û–í–ê–ù–ù–´–ï –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (–ù–ï –º–∞—Å—à—Ç–∞–±–∏—Ä—É—é—Ç—Å—è)
    state_size: 4 # –ë–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏ –ø—Ä–∞–≤–¥–æ–ø–æ–¥–æ–±–Ω—ã–π —Ä–∞–∑–º–µ—Ä
    neighbor_count: 26 # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç—Å—è —Å lattice.neighbors
    hidden_dim: 3 # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –¥–ª—è NCA –ø—Ä–∞–≤–∏–ª
    external_input_size: 2 # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–Ω–µ—à–Ω–∏–π –≤—Ö–æ–¥

    # NCA specific parameters
    activation: "tanh" # –°—Ç–∞–±–∏–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è –¥–ª—è NCA
    dropout: 0.0 # NCA –Ω–µ –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤ dropout
    use_memory: false # NCA –∏–º–µ–µ—Ç implicit memory

    # –ö–†–ò–¢–ò–ß–ù–û: –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è
    enable_lattice_scaling: false
    target_params: 69 # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π target

    # NCA dynamics parameters
    alpha: 0.1 # Update strength
    beta: 0.05 # Neighbor influence

# === CONNECTION ARCHITECTURE (GatedMLP) ===
connection_config:
  architecture: "gated_mlp"

  gmlp_opt_connections:
    state_size: 8
    neighbor_count: 26

# === I/O CONFIGURATION ===
io:
  input_face: "front"
  output_face: "back"
  placement_strategy: "proportional"

  io_strategy_config:
    coverage_ratio:
      min_percentage: 8.0 # –ë–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ
      max_percentage: 12.0 # –ö–∞–∫ –≤ –∫–æ—Ä–µ –º–æ–∑–≥–∞
    seed: 42

# === TRAINING CONFIGURATION ===
training:
  # –ì–∏–±—Ä–∏–¥–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
  learning_rate: 0.0005 # Conservative –¥–ª—è NCA stability

  # –†–∞–∑–¥–µ–ª—å–Ω—ã–µ learning rates (–±—É–¥—É—â–∞—è —Ñ–∏—á–∞)
  # nca_learning_rate: 0.0001    # –ú–µ–¥–ª–µ–Ω–Ω–µ–µ –¥–ª—è NCA
  # gmlp_learning_rate: 0.001    # –ë—ã—Å—Ç—Ä–µ–µ –¥–ª—è GatedMLP

  batch_size: 2 # Memory constraints
  epochs: 100
  optimizer: "AdamW"
  scheduler: "ReduceLROnPlateau"

  # –ì–∏–±—Ä–∏–¥–Ω—ã–µ loss weights
  loss_weights:
    nca_dynamics: 0.3 # NCA state evolution
    connection_learning: 0.4 # GatedMLP connectivity
    output_reconstruction: 0.3 # Final output quality

# === VALIDATION PARAMETERS ===
validation:
  # Parameter count validation
  max_nca_params: 69
  max_gmlp_params: 25000

  # Performance benchmarks
  max_forward_time_ms: 250 # Total hybrid forward pass
  max_memory_gb: 20 # VRAM usage limit

  # Architecture separation validation
  validate_nca_no_scaling: true
  validate_gmlp_scaling: true
  validate_parameter_efficiency: true

# === DEBUGGING ===
debug:
  enable_parameter_logging: true
  log_architecture_decisions: true
  validate_hybrid_integration: true
  performance_profiling: true

# === EXPERIMENTAL FEATURES ===
experimental:
  # Future: different architectures for different cell types
  enable_mixed_architectures: false

  # Future: adaptive parameter allocation
  dynamic_parameter_distribution: false

  # Future: NCA-GatedMLP communication protocols
  enable_cross_architecture_communication: false
