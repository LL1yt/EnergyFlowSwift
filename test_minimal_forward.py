#!/usr/bin/env python3
"""Minimal test - just one forward pass"""

import torch
import time
from new_rebuild.core.training import EmbeddingTrainer
from new_rebuild.config import SimpleProjectConfig

print("üöÄ Minimal forward pass test...")

# –°–æ–∑–¥–∞–µ–º trainer
config = SimpleProjectConfig()
trainer = EmbeddingTrainer(config)

# –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π –±–∞—Ç—á
batch_size = 1  # –¢–æ–ª—å–∫–æ 1 —Å—ç–º–ø–ª
embedding_dim = 768
test_embeddings = torch.randn(batch_size, embedding_dim).to(trainer.device)

print(f"üìä Test input shape: {test_embeddings.shape}")

# –í—Ä–µ–º—è forward pass
start_time = time.time()

try:
    # –ù–∞–ø—Ä—è–º—É—é –≤—ã–∑—ã–≤–∞–µ–º _forward_pass
    losses = trainer._forward_pass(
        input_embeddings=test_embeddings,
        target_embeddings=test_embeddings,
        texts=None
    )
    
    elapsed = time.time() - start_time
    print(f"\n‚úÖ Forward pass completed in {elapsed:.2f} seconds!")
    print(f"üìà Losses:")
    for key, value in losses.items():
        print(f"   {key}: {value.item():.6f}")
        
except Exception as e:
    print(f"\n‚ùå Error: {e}")
    import traceback
    traceback.print_exc()