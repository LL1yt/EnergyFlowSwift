---
description: Enforces the specific development practices for this experimental memory scanner project, focusing on extreme modularity, documentation-first development, and incremental implementation as detailed in @instructions.md.
globs: 
alwaysApply: true
---
# Core Development Principles

Follow these guidelines strictly when working on any file within this project. Refer to @instructions.md for complete details and examples.

1.  **Extreme Modularity**: Create extremely small, focused modules.
2.  **NO AUTOMATED TESTING**: Verify functionality manually after each step.
3.  **Documentation-First**: Update ALL required documentation files (`__init__.py`, `main.py`, `README.md`, `plan.md`, `meta.md`, `errors.md`, `diagram.mmd`, `examples.md`) *immediately* after any change.
4.  **Incremental Development**: Implement in tiny, verifiable steps. Mark `plan.md`.
5.  **Minimal Changes**: Implement only the minimum required for manual testing, then STOP.
6.  **Document Real Errors**: Only document errors encountered during development in `errors.md`.
7.  **Unified Interface**: Integrate modules into the main application processing pipeline progressively.
8.  **Code Organization**: Keep configuration, data processing, and utilities in separate files within the module directory.
9.  **Comprehensive Feedback**: Implement detailed logging and output feedback for all operations.
10. **Diagram Standards**: Follow the enhanced Mermaid diagram guidelines in @instructions.md, especially for data flow and model interactions.
11. **Module Integration**: Use the defined integration process (Python imports, shared configuration) without code duplication. Reference `docs/module-integration-guide.md` if needed.
12. **Directory Structure**: Adhere to the standard module directory structure with proper Python packaging.

---
Reference the full guidelines document for detailed explanations:
@instructions.md