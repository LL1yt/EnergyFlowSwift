#!/usr/bin/env python3
"""–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º—ã —Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–º–∏ —Å–æ—Å–µ–¥—è–º–∏"""

import torch
from new_rebuild.config import SimpleProjectConfig
from new_rebuild.core.lattice.spatial_optimization.unified_spatial_optimizer import UnifiedSpatialOptimizer

print("üîç –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–æ—Å–µ–¥—è–º–∏...")

config = SimpleProjectConfig()
print(f"üìè Lattice dimensions: {config.lattice.dimensions}")

# –°–æ–∑–¥–∞–µ–º spatial optimizer - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
optimizer = UnifiedSpatialOptimizer(
    dimensions=config.lattice.dimensions
)

# –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
num_cells = config.lattice.total_cells
state_size = config.model.state_size
test_states = torch.randn(num_cells, state_size)

print(f"üìä Test states shape: {test_states.shape}")

# –ü—Ä–æ–≤–µ—Ä–∏–º –ø–æ–∏—Å–∫ —Å–æ—Å–µ–¥–µ–π –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫–ª–µ—Ç–æ–∫
test_cells = [0, 63, 255, 256, 511]  # –£–≥–ª–æ–≤—ã–µ –∏ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–µ –∫–ª–µ—Ç–∫–∏

for cell_idx in test_cells:
    # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Å–æ—Å–µ–¥–µ–π —á–µ—Ä–µ–∑ spatial optimizer  
    try:
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º linear index –≤ 3D –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
        z = cell_idx // (config.lattice.dimensions[0] * config.lattice.dimensions[1])
        y = (cell_idx % (config.lattice.dimensions[0] * config.lattice.dimensions[1])) // config.lattice.dimensions[0]
        x = cell_idx % config.lattice.dimensions[0]
        coords = (x, y, z)
        
        # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Å–æ—Å–µ–¥–µ–π —Å —Ä–∞–∑–Ω—ã–º–∏ —Ä–∞–¥–∏—É—Å–∞–º–∏
        for radius in [1.0, 1.5, 2.0]:
            neighbors = optimizer.find_neighbors_optimized(coords, radius)
            print(f"üîç Cell {cell_idx} at {coords}: radius={radius} ‚Üí {len(neighbors)} neighbors")
            if len(neighbors) > 0:
                break
        
        if len(neighbors) == 0:
            print(f"‚ùå Cell {cell_idx} has NO neighbors at any radius!")
            
    except Exception as e:
        print(f"‚ùå Error finding neighbors for cell {cell_idx}: {e}")

print("‚úÖ Neighbor analysis completed")