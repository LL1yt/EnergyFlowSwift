#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –Ω–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è —ç–º–±–µ–¥–∏–Ω–≥–æ–≤
=====================================

–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —ç–º–±–µ–¥–∏–Ω–≥–æ–≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã
–≤ —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é.
"""

from new_rebuild.config.simple_config import get_project_config, SimpleProjectConfig
from new_rebuild.utils.logging import get_logger

logger = get_logger(__name__)


def test_embedding_config():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —ç–º–±–µ–¥–∏–Ω–≥–æ–≤ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    
    # –ü–æ–ª—É—á–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config = get_project_config()
    
    logger.info("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —ç–º–±–µ–¥–∏–Ω–≥–æ–≤ ===")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —ç–º–±–µ–¥–∏–Ω–≥–æ–≤
    logger.info(f"\n–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —ç–º–±–µ–¥–∏–Ω–≥–æ–≤:")
    logger.info(f"  Teacher model: {config.embedding.teacher_model}")
    logger.info(f"  Teacher embedding dim: {config.embedding.teacher_embedding_dim}")
    logger.info(f"  Cube surface dim: {config.embedding.cube_surface_dim}")
    logger.info(f"  Cube embedding dim: {config.embedding.cube_embedding_dim}")
    logger.info(f"  Transformation type: {config.embedding.transformation_type}")
    logger.info(f"  Use residual connections: {config.embedding.use_residual_connections}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±—É—á–µ–Ω–∏—è
    logger.info(f"\n–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±—É—á–µ–Ω–∏—è —ç–º–±–µ–¥–∏–Ω–≥–æ–≤:")
    logger.info(f"  Test mode: {config.training_embedding.test_mode}")
    logger.info(f"  Test lattice dim: {config.training_embedding.test_lattice_dim}")
    logger.info(f"  Main epochs: {config.training_embedding.main_epochs}")
    logger.info(f"  Curriculum learning: {config.training_embedding.use_curriculum_learning}")
    logger.info(f"  Semantic validation: {config.training_embedding.enable_semantic_validation}")
    logger.info(f"  Probing tasks: {config.training_embedding.probing_tasks}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º loss –≤–µ—Å–∞
    logger.info(f"\n–í–µ—Å–∞ loss —Ñ—É–Ω–∫—Ü–∏–π:")
    logger.info(f"  Reconstruction: {config.training_embedding.reconstruction_loss_weight}")
    logger.info(f"  Similarity: {config.training_embedding.similarity_loss_weight}")
    logger.info(f"  Diversity: {config.training_embedding.diversity_loss_weight}")
    logger.info(f"  Emergence: {config.training_embedding.emergence_loss_weight}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å —Ä–µ—à–µ—Ç–∫–æ–π
    logger.info(f"\n–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Ä–µ—à–µ—Ç–∫–æ–π:")
    expected_cube_embedding = config.embedding.cube_surface_dim ** 2
    assert config.embedding.cube_embedding_dim == expected_cube_embedding, \
        f"–ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç–∏: {config.embedding.cube_embedding_dim} != {expected_cube_embedding}"
    logger.info(f"  ‚úì –†–∞–∑–º–µ—Ä–Ω–æ—Å—Ç—å —ç–º–±–µ–¥–∏–Ω–≥–∞ –∫—É–±–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞: {config.embedding.cube_embedding_dim}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ
    logger.info(f"\n–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è —ç–º–±–µ–¥–∏–Ω–≥–æ–≤:")
    logger.info(f"  Cache enabled: {config.embedding.cache_embeddings}")
    logger.info(f"  Cache dir: {config.embedding.cache_dir}")
    logger.info(f"  Max cache size: {config.embedding.max_cache_size_gb} GB")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    logger.info(f"\n–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫:")
    config.update_component('embedding', teacher_model='bert-base-uncased', teacher_embedding_dim=768)
    logger.info(f"  ‚úì –û–±–Ω–æ–≤–ª–µ–Ω–æ: teacher_model = {config.embedding.teacher_model}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä—ã—Ö —Ç–µ—Å—Ç–æ–≤
    logger.info(f"\n–¢–µ—Å—Ç–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:")
    logger.info(f"  Quick iterations: {config.training_embedding.test_quick_iterations}")
    logger.info(f"  Test dataset size: {config.training_embedding.test_dataset_size}")
    logger.info(f"  Validation split: {config.training_embedding.test_validation_split}")
    
    logger.info("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —ç–º–±–µ–¥–∏–Ω–≥–æ–≤ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")


def test_hierarchical_embedding_config():
    """–¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —ç–º–±–µ–¥–∏–Ω–≥–æ–≤"""
    
    config = SimpleProjectConfig()
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –¥–ª—è –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
    config.embedding.transformation_type = "hierarchical"
    config.embedding.use_residual_connections = True
    config.embedding.use_layer_norm = True
    
    logger.info("\n=== –¢–µ—Å—Ç –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ ===")
    logger.info(f"Transformation type: {config.embedding.transformation_type}")
    logger.info(f"Residual connections: {config.embedding.use_residual_connections}")
    logger.info(f"Layer norm: {config.embedding.use_layer_norm}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –±–æ–ª—å—à–∏—Ö –∫—É–±–æ–≤
    config.lattice.dimensions = (50, 50, 50)
    config.embedding.cube_surface_dim = 50
    config.embedding.cube_embedding_dim = 2500  # 50√ó50
    
    logger.info(f"\n–¢–µ—Å—Ç –¥–ª—è –±–æ–ª—å—à–æ–≥–æ –∫—É–±–∞:")
    logger.info(f"  Lattice: {config.lattice.dimensions}")
    logger.info(f"  Total cells: {config.lattice.total_cells}")
    logger.info(f"  Embedding dim: {config.embedding.cube_embedding_dim}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–∫–ª—é—á–µ–Ω–∏–µ –∫—ç—à–∞
    if config.lattice.total_cells > config.cache.auto_enable_threshold:
        logger.info(f"  ‚úì –ö—ç—à –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∫–ª—é—á–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ (–ø–æ—Ä–æ–≥: {config.cache.auto_enable_threshold})")


if __name__ == "__main__":
    test_embedding_config()
    test_hierarchical_embedding_config()
    
    logger.info("\nüéâ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —ç–º–±–µ–¥–∏–Ω–≥–æ–≤ —É—Å–ø–µ—à–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞!")