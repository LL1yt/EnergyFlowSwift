#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ hardcoded –∑–Ω–∞—á–µ–Ω–∏–π
============================================

–≠—Ç–æ—Ç –º–æ–¥—É–ª—å –ø–æ–º–æ–≥–∞–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ hardcoded –∑–Ω–∞—á–µ–Ω–∏–π
–≤ –∫–æ–¥–µ –∏ —Ç—Ä–µ–±—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.
"""

import inspect
import functools
from typing import Any, Callable, List, Set, Union, Optional
from dataclasses import fields

# –û—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –∏–º–ø–æ—Ä—Ç –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
from typing import TYPE_CHECKING
if TYPE_CHECKING:
    from ..config import SimpleProjectConfig

from .logging import get_logger

# –î–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –¥–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–æ—Å—Ç—É–ø–Ω–æ–π –Ω–∞ —É—Ä–æ–≤–Ω–µ –º–æ–¥—É–ª—è
_original_check_hardcoded_value = None

logger = get_logger(__name__)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥–∞
def _get_config():
    """–û—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –∏–º–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥–∞ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    from ..config import get_project_config
    return get_project_config()


# –°–ø–∏—Å–æ–∫ –∑–Ω–∞—á–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ —Å—á–∏—Ç–∞—é—Ç—Å—è hardcoded –∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –∫–æ–Ω—Ñ–∏–≥–µ
FORBIDDEN_HARDCODED_VALUES = {
    # Learning rates
    1e-4, 1e-5, 5e-5, 1e-3,
    # Batch sizes –∏ —Ä–∞–∑–º–µ—Ä—ã
    8, 16, 32, 64, 100, 128, 256, 512, 1000, 10000,
    # Dropout –∏ –¥—Ä—É–≥–∏–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã
    0.1, 0.2, 0.5, 0.8, 0.85, 0.9,
    # –†–∞–∑–º–µ—Ä—ã –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
    768, 1024, 2000, 3000, 4000, 8000, 15000,
    # –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    10, 50, 100, 500, 1000,
    # Memory limits
    2.0, 8.0, 10.0, 20.0,
}

# –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (–±–∞–∑–æ–≤—ã–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã)
ALLOWED_VALUES = {
    0, 1, 2, 3, 4, 5, 6, 7,  # –ú–∞–ª–µ–Ω—å–∫–∏–µ —á–∏—Å–ª–∞ –¥–ª—è –∏–Ω–¥–µ–∫—Å–æ–≤
    -1,  # –ß–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è "–ø–æ—Å–ª–µ–¥–Ω–∏–π"
    0.0, 1.0,  # –ë–∞–∑–æ–≤—ã–µ float
    True, False, None,  # –ë—É–ª–µ–≤—ã –∏ None
}


class HardcodedValueError(Exception):
    """–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–∏ hardcoded –∑–Ω–∞—á–µ–Ω–∏—è"""
    pass


def check_hardcoded_value(value: Any, context: str = "") -> None:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ hardcoded.
    
    Args:
        value: –ó–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –≥–¥–µ –Ω–∞–π–¥–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ (–¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ)
        
    Raises:
        HardcodedValueError: –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è hardcoded
    """
    if value in ALLOWED_VALUES:
        return
        
    if value in FORBIDDEN_HARDCODED_VALUES:
        config = _get_config()
        mode = config.mode.mode.value
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É –≥–¥–µ –∏—Å–∫–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ñ–∏–≥–µ
        hint = _get_config_hint(value)
        
        raise HardcodedValueError(
            f"\n‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–û HARDCODED –ó–ù–ê–ß–ï–ù–ò–ï: {value}\n"
            f"üìç –ö–æ–Ω—Ç–µ–∫—Å—Ç: {context}\n"
            f"üéØ –¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º: {mode.upper()}\n"
            f"üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: {hint}\n"
            f"üìù –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞!\n"
            f"   –ù–∞–ø—Ä–∏–º–µ—Ä: config.{hint}"
        )


def _get_config_hint(value: Any) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–¥—Å–∫–∞–∑–∫—É –≥–¥–µ –∏—Å–∫–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ñ–∏–≥–µ"""
    hints = {
        # Learning rates
        1e-4: "training_optimizer.learning_rate",
        1e-5: "training_optimizer.weight_decay",
        
        # Dropout
        0.1: "embedding_mapping.dropout_rate –∏–ª–∏ architecture.cnf_dropout_rate",
        
        # Memory
        8.0: "memory_management.min_gpu_memory_gb",
        20.0: "memory_management.training_memory_reserve_gb",
        0.85: "memory_management.gpu_memory_safety_factor",
        
        # Architecture
        768: "architecture.teacher_embedding_dim",
        8000: "architecture.moe_functional_params",
        4000: "architecture.moe_distant_params",
        
        # Spatial
        1000: "architecture.spatial_max_neighbors",
        100: "architecture.max_comparison_cells –∏–ª–∏ memory_management.cleanup_threshold",
        
        # Training
        10: "training_optimizer.scheduler_t0 –∏–ª–∏ training_optimizer.log_batch_frequency",
        
        # –ü—Ä–æ—á–µ–µ
        0.8: "embedding_mapping.surface_coverage –∏–ª–∏ memory_management.memory_safety_factor",
    }
    
    return hints.get(value, "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ training_optimizer, architecture, memory_management –∏–ª–∏ embedding_mapping")


def no_hardcoded(func: Callable) -> Callable:
    """
    –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ hardcoded –∑–Ω–∞—á–µ–Ω–∏–π –≤ —Ñ—É–Ω–∫—Ü–∏—è—Ö.
    
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ hardcoded –∑–Ω–∞—á–µ–Ω–∏–π.
    """
    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ—É–Ω–∫—Ü–∏–∏
        func_name = func.__name__
        module = func.__module__
        context = f"{module}.{func_name}"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
        for i, arg in enumerate(args):
            if isinstance(arg, (int, float)) and arg not in ALLOWED_VALUES:
                check_hardcoded_value(arg, f"{context} - –∞—Ä–≥—É–º–µ–Ω—Ç {i}")
                
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
        for key, value in kwargs.items():
            if isinstance(value, (int, float)) and value not in ALLOWED_VALUES:
                check_hardcoded_value(value, f"{context} - –ø–∞—Ä–∞–º–µ—Ç—Ä '{key}'")
                
        return func(*args, **kwargs)
    
    return wrapper


def check_class_init(cls: type) -> None:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç __init__ –º–µ—Ç–æ–¥ –∫–ª–∞—Å—Å–∞ –Ω–∞ hardcoded –∑–Ω–∞—á–µ–Ω–∏—è –≤ –¥–µ—Ñ–æ–ª—Ç–∞—Ö.
    
    Args:
        cls: –ö–ª–∞—Å—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    """
    init_signature = inspect.signature(cls.__init__)
    
    for param_name, param in init_signature.parameters.items():
        if param.default is not inspect.Parameter.empty:
            if isinstance(param.default, (int, float)):
                try:
                    check_hardcoded_value(
                        param.default, 
                        f"{cls.__module__}.{cls.__name__}.__init__ - –ø–∞—Ä–∞–º–µ—Ç—Ä '{param_name}'"
                    )
                except HardcodedValueError:
                    # –î–ª—è –∫–ª–∞—Å—Å–æ–≤ –≤—ã–≤–æ–¥–∏–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ, –Ω–æ –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
                    logger.warning(
                        f"‚ö†Ô∏è Hardcoded –∑–Ω–∞—á–µ–Ω–∏–µ {param.default} –≤ {cls.__name__}.{param_name}. "
                        f"–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å config!"
                    )


def validate_no_hardcoded_in_module(module) -> List[str]:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–µ—Å—å –º–æ–¥—É–ª—å –Ω–∞ –Ω–∞–ª–∏—á–∏–µ hardcoded –∑–Ω–∞—á–µ–Ω–∏–π.
    
    Args:
        module: Python –º–æ–¥—É–ª—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        
    Returns:
        –°–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º
    """
    issues = []
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∫–ª–∞—Å—Å—ã –≤ –º–æ–¥—É–ª–µ
    for name, obj in inspect.getmembers(module, inspect.isclass):
        if obj.__module__ == module.__name__:  # –¢–æ–ª—å–∫–æ –∫–ª–∞—Å—Å—ã –∏–∑ —ç—Ç–æ–≥–æ –º–æ–¥—É–ª—è
            try:
                check_class_init(obj)
            except Exception as e:
                issues.append(f"–ö–ª–∞—Å—Å {name}: {str(e)}")
                
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏
    for name, obj in inspect.getmembers(module, inspect.isfunction):
        if obj.__module__ == module.__name__:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
            sig = inspect.signature(obj)
            for param_name, param in sig.parameters.items():
                if param.default is not inspect.Parameter.empty:
                    if isinstance(param.default, (int, float)) and param.default in FORBIDDEN_HARDCODED_VALUES:
                        issues.append(
                            f"–§—É–Ω–∫—Ü–∏—è {name}.{param_name}: hardcoded –∑–Ω–∞—á–µ–Ω–∏–µ {param.default}"
                        )
                        
    return issues


def strict_no_hardcoded(value: Union[int, float], param_name: str) -> Union[int, float]:
    """
    –°—Ç—Ä–æ–≥–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø–æ–ª—É—á–µ–Ω–∏–µ–º –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞.
    
    –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
        hidden_dim = strict_no_hardcoded(64, "model.hidden_dim")
    
    Args:
        value: –ó–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        param_name: –ü—É—Ç—å –∫ –ø–∞—Ä–∞–º–µ—Ç—Ä—É –≤ –∫–æ–Ω—Ñ–∏–≥–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "architecture.spatial_max_neighbors")
        
    Returns:
        –ó–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
        
    Raises:
        HardcodedValueError: –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è hardcoded –∑–Ω–∞—á–µ–Ω–∏–µ
    """
    if value in FORBIDDEN_HARDCODED_VALUES:
        config = _get_config()
        
        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞ –ø–æ –ø—É—Ç–∏
        try:
            parts = param_name.split('.')
            result = config
            
            for part in parts:
                result = getattr(result, part)
                
            logger.debug(f"–ó–∞–º–µ–Ω–µ–Ω–æ hardcoded {value} –Ω–∞ {result} –∏–∑ config.{param_name}")
            return result
            
        except AttributeError:
            raise HardcodedValueError(
                f"\n‚ùå –ó–ê–ü–†–ï–©–ï–ù–û HARDCODED –ó–ù–ê–ß–ï–ù–ò–ï: {value}\n"
                f"üìù –ü–∞—Ä–∞–º–µ—Ç—Ä '{param_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥–µ!\n"
                f"üí° –î–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.\n"
                f"üéØ –¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º: {config.mode.mode.value.upper()}"
            )
    
    # –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
    return value


# –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–æ–∫
class allow_hardcoded:
    """
    –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è hardcoded –∑–Ω–∞—á–µ–Ω–∏–π.
    
    –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¢–û–õ–¨–ö–û –≤ —Ç–µ—Å—Ç–∞—Ö –∏–ª–∏ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏!
    
    with allow_hardcoded("migration in progress"):
        # –ö–æ–¥ —Å hardcoded –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
    """
    
    _disabled = False
    
    def __init__(self, reason: str):
        self.reason = reason
        
    def __enter__(self):
        logger.warning(f"‚ö†Ô∏è Hardcoded –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã: {self.reason}")
        allow_hardcoded._disabled = True
        return self
        
    def __exit__(self, exc_type, exc_val, exc_tb):
        allow_hardcoded._disabled = False
        

# –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º check_hardcoded_value —á—Ç–æ–±—ã —É—á–∏—Ç—ã–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç
def _check_hardcoded_value_with_context(value: Any, context: str = "") -> None:
    """–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –≤–µ—Ä—Å–∏—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ allow_hardcoded"""
    if allow_hardcoded._disabled:
        return
    
    # –í—ã–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
    if value in ALLOWED_VALUES:
        return
        
    if value in FORBIDDEN_HARDCODED_VALUES:
        config = _get_config()
        mode = config.mode.mode.value
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É –≥–¥–µ –∏—Å–∫–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ñ–∏–≥–µ
        hint = _get_config_hint(value)
        
        raise HardcodedValueError(
            f"\n‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–û HARDCODED –ó–ù–ê–ß–ï–ù–ò–ï: {value}\n"
            f"üìç –ö–æ–Ω—Ç–µ–∫—Å—Ç: {context}\n"
            f"üéØ –¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º: {mode.upper()}\n"
            f"üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: {hint}\n"
            f"üìù –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞!\n"
            f"   –ù–∞–ø—Ä–∏–º–µ—Ä: config.{hint}"
        )

# –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
_original_check_hardcoded_value = check_hardcoded_value

# –ó–∞–º–µ–Ω—è–µ–º –Ω–∞ –≤–µ—Ä—Å–∏—é —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
check_hardcoded_value = _check_hardcoded_value_with_context