#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
–≤ MoE spatial optimization
"""

import sys
import torch
import logging

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(".")

from new_rebuild.config import get_project_config
from new_rebuild.core.moe.moe_connection_processor import MoEConnectionProcessor
from new_rebuild.core.lattice.spatial_optimization.moe_spatial_optimizer import (
    create_moe_spatial_optimizer,
)
from new_rebuild.utils.logging import setup_logging


def debug_moe_coords():
    """–û—Ç–ª–∞–∂–∏–≤–∞–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏"""

    # –í–∫–ª—é—á–∞–µ–º debug –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    setup_logging(debug_mode=True)

    print("üîç –û–¢–õ–ê–î–ö–ê –ü–†–û–ë–õ–ï–ú–´ –° –ö–û–û–†–î–ò–ù–ê–¢–ê–ú–ò MoE")
    print("=" * 60)

    # –ú–∞–ª–∞—è —Ä–µ—à–µ—Ç–∫–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    test_dimensions = (5, 5, 5)
    total_cells = test_dimensions[0] * test_dimensions[1] * test_dimensions[2]

    print(f"üìê –¢–µ—Å—Ç–æ–≤—ã–µ —Ä–∞–∑–º–µ—Ä—ã: {test_dimensions} ({total_cells} –∫–ª–µ—Ç–æ–∫)")
    print(f"üìä –î–æ–ø—É—Å—Ç–∏–º—ã–µ –∏–Ω–¥–µ–∫—Å—ã: 0 - {total_cells-1}")
    print(f"üìä –î–æ–ø—É—Å—Ç–∏–º—ã–µ Z-–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: 0 - {test_dimensions[2]-1}")

    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config = get_project_config()
    device = torch.device("cuda" if torch.cuda.is_available() else "cpu")

    print(f"üéØ –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: {device}")

    # –°–æ–∑–¥–∞–µ–º MoE processor
    print("\nüõ†Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ MoE processor...")
    moe_processor = MoEConnectionProcessor(
        state_size=config.gnn_state_size,
        lattice_dimensions=test_dimensions,
        neighbor_count=config.max_neighbors,
        enable_cnf=config.enable_cnf,
    )
    moe_processor.to(device)

    # –°–æ–∑–¥–∞–µ–º spatial optimizer
    print("\nüóÇÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ spatial optimizer...")
    spatial_optimizer = create_moe_spatial_optimizer(
        dimensions=test_dimensions,
        moe_processor=moe_processor,
        device=device,
    )

    # –°–æ–∑–¥–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è
    print(f"\nüìä –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π...")
    states = torch.randn(
        total_cells,
        config.gnn_state_size,
        device=device,
        dtype=torch.float32,
    )

    print(f"   States shape: {states.shape}")
    print(f"   States device: {states.device}")

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –û–î–ù–û–ô –∫–ª–µ—Ç–∫–∏
    print(f"\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ–¥–Ω–æ–π –∫–ª–µ—Ç–∫–∏ (idx=0)...")

    try:
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—É—é –∫–ª–µ—Ç–∫—É
        current_state = states[0].unsqueeze(0)
        empty_neighbors = torch.empty(1, 0, states.shape[1], device=device)

        print(f"   Current state shape: {current_state.shape}")
        print(f"   Calling MoE processor...")

        result = moe_processor(
            current_state=current_state,
            neighbor_states=empty_neighbors,
            cell_idx=0,  # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –≤–∞–ª–∏–¥–Ω—ã–º –∏–Ω–¥–µ–∫—Å–æ–º
            neighbor_indices=[],
            spatial_optimizer=spatial_optimizer,
            full_lattice_states=states,
        )

        print(f"‚úÖ MoE processor —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è cell_idx=0")
        print(f"   Result type: {type(result)}")
        if isinstance(result, dict):
            print(f"   Result keys: {result.keys()}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ MoE processor: {e}")
        import traceback

        traceback.print_exc()

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º spatial optimizer –Ω–∞–ø—Ä—è–º—É—é
    print(f"\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º spatial optimizer –Ω–∞–ø—Ä—è–º—É—é...")
    try:
        neighbors = spatial_optimizer.find_neighbors_optimized(
            coords=(0, 0, 0),  # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –≤–∞–ª–∏–¥–Ω—ã–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
            radius=config.calculate_adaptive_radius(),
        )
        print(f"‚úÖ Spatial optimizer —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è (0,0,0)")
        print(f"   –ù–∞–π–¥–µ–Ω–æ —Å–æ—Å–µ–¥–µ–π: {len(neighbors)}")
        print(f"   –ü–µ—Ä–≤—ã–µ 10 —Å–æ—Å–µ–¥–µ–π: {neighbors[:10]}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ spatial optimizer: {e}")
        import traceback

        traceback.print_exc()


if __name__ == "__main__":
    debug_moe_coords()
