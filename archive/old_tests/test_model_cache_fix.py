#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫—ç—à–∞ –º–æ–¥–µ–ª–µ–π
============================

–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ä–∞–±–æ—Ç—É –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π.
"""

import logging
from new_rebuild.config.simple_config import get_project_config
from new_rebuild.utils.model_cache import get_model_cache_manager

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    level=logging.DEBUG, format="%(asctime)s - %(name)s - %(levelname)s - %(message)s"
)


def test_model_cache_detection():
    """–¢–µ—Å—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π"""
    print("üîç –¢–µ—Å—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π")
    print("=" * 50)

    config = get_project_config()
    manager = get_model_cache_manager(config)

    model_name = "distilbert-base-uncased"

    print(f"\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–∏: {model_name}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
    is_cached = manager.is_model_cached(model_name)
    print(f"‚úÖ –ú–æ–¥–µ–ª—å –≤ –∫—ç—à–µ: {is_cached}")

    # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å
    model_path = manager.get_model_path(model_name)
    print(f"üìÅ –ü—É—Ç—å –∫ –º–æ–¥–µ–ª–∏: {model_path}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫—ç—à–µ
    cache_info = manager.get_cache_info()
    print(f"\nüìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫—ç—à–µ:")
    print(f"  –ú–æ–¥–µ–ª–µ–π –≤ –∫—ç—à–µ: {cache_info['models_count']}")
    print(f"  –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: {cache_info['total_size_mb']:.1f} MB")
    print(f"  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {cache_info['cache_dir']}")
    print(f"  –ú–æ–¥–µ–ª–∏: {cache_info['models']}")

    if is_cached:
        print("\n‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω: –º–æ–¥–µ–ª—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –∫–∞–∫ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω–∞—è!")
        return True
    else:
        print("\n‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: –º–æ–¥–µ–ª—å –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –∫–∞–∫ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω–∞—è")
        return False


if __name__ == "__main__":
    success = test_model_cache_detection()
    if success:
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã!")
    else:
        print("\nüí• –¢–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã!")
