#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç GPU-only —Ä–µ–∂–∏–º–∞ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º —Å—ç–º–ø–ª–æ–≤
"""

import sys
import time
from pathlib import Path
sys.path.append(str(Path(__file__).parent))

from new_rebuild.config import SimpleProjectConfig
from new_rebuild.core.training.utils import create_training_dataloader
from new_rebuild.utils.logging import get_logger
from new_rebuild.utils.device_manager import get_device_manager

logger = get_logger(__name__)

def test_gpu_only_mode():
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç GPU-only —Ä–µ–∂–∏–º–∞"""
    
    logger.info("‚ö° TESTING STRICT GPU-ONLY MODE")
    logger.info("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–º GPU —Ä–µ–∂–∏–º–æ–º
    config = SimpleProjectConfig()
    config.device.fallback_cpu = False  # –°—Ç—Ä–æ–≥–∏–π GPU-only —Ä–µ–∂–∏–º
    
    device_manager = get_device_manager()
    logger.info(f"üîç GPU Status: {device_manager.is_cuda()}")
    
    if not device_manager.is_cuda():
        logger.error("üö® GPU –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω! –¢–µ—Å—Ç –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å—Å—è –≤ GPU-only —Ä–µ–∂–∏–º–µ")
        return False
    
    # –¢–µ—Å—Ç 1: –ú–∞–ª—ã–π –¥–∞—Ç–∞—Å–µ—Ç –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏
    logger.info("\nüî¨ Test 1: Small GPU-only dataset (50 samples)")
    config.training_embedding.max_total_samples = 50
    
    try:
        logger.info("üîÑ Creating dataloader...")
        start_time = time.time()
        dataloader, stats = create_training_dataloader(
            config=config,
            shuffle=True,
            num_workers=0  # –ë–µ–∑ –≤–æ—Ä–∫–µ—Ä–æ–≤ –¥–ª—è Windows
        )
        load_time = time.time() - start_time
        
        logger.info(f"‚ö° SUCCESS: Load time: {load_time:.2f}s")
        logger.info(f"üìä Dataset size: {stats.total_samples}")
        
        # –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –±–∞—Ç—á–µ–π
        logger.info("\nüîÑ Testing first batch:")
        for i, batch in enumerate(dataloader):
            embeddings = batch['embedding']
            logger.info(f"  Batch shape: {embeddings.shape}")
            logger.info(f"  Device: {embeddings.device}")
            logger.info(f"  Dtype: {embeddings.dtype}")
            break  # –¢–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–π –±–∞—Ç—á
            
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–º—è—Ç–∏
        memory_stats = device_manager.get_memory_stats()
        logger.info(f"\nüíæ GPU Memory:")
        logger.info(f"  Allocated: {memory_stats.get('allocated_mb', 0):.1f}MB")
        
        logger.info("‚úÖ GPU-only mode test PASSED!")
        return True
        
    except Exception as e:
        logger.error(f"üö® GPU-only test FAILED: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = test_gpu_only_mode()
    print(f"\n{'‚úÖ SUCCESS' if success else '‚ùå FAILED'}: GPU-only mode test")