#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è DEBUG –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
===============================================

–ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–æ–≥–¥–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ level="DEBUG",
—Ç–æ logger.debug() —Å–æ–æ–±—â–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤—ã–≤–æ–¥—è—Ç—Å—è.
"""

import logging
from new_rebuild.config import SimpleProjectConfig
from new_rebuild.utils.logging import get_logger

print("=== DEBUG LOGGING TEST ===")

# –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ)
config = SimpleProjectConfig()

print(f"Config logging level: {config.logging.level}")
print(f"Config debug_mode: {config.logging.debug_mode}")

# –ü–æ–ª—É—á–∞–µ–º –ª–æ–≥–≥–µ—Ä
logger = get_logger("test_debug")

print("\n=== –¢–ï–°–¢–ò–†–£–ï–ú –£–†–û–í–ù–ò –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø ===")

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ —É—Ä–æ–≤–Ω–∏
logger.debug("üîç DEBUG: –≠—Ç–æ debug —Å–æ–æ–±—â–µ–Ω–∏–µ")
logger.info("‚ÑπÔ∏è INFO: –≠—Ç–æ info —Å–æ–æ–±—â–µ–Ω–∏–µ")
logger.warning("‚ö†Ô∏è WARNING: –≠—Ç–æ warning —Å–æ–æ–±—â–µ–Ω–∏–µ")
logger.error("‚ùå ERROR: –≠—Ç–æ error —Å–æ–æ–±—â–µ–Ω–∏–µ")

print("\n=== –¢–ï–°–¢–ò–†–£–ï–ú DEBUG –° –ú–ê–†–ö–ï–†–ê–ú–ò ===")

# DEBUG —Å –≤–∞–∂–Ω—ã–º–∏ –º–∞—Ä–∫–µ—Ä–∞–º–∏ (–¥–æ–ª–∂–Ω—ã –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –¥–∞–∂–µ –ø—Ä–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏)
logger.debug("üöÄ INIT Test component initialized")
logger.debug("‚úÖ OK: Operation completed successfully")
logger.debug("‚ùå ERROR: Operation failed")

print("\n=== –¢–ï–°–¢–ò–†–£–ï–ú –û–ë–´–ß–ù–´–ï DEBUG ===")

# –û–±—ã—á–Ω—ã–µ DEBUG —Å–æ–æ–±—â–µ–Ω–∏—è (–¥–æ–ª–∂–Ω—ã –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ level="DEBUG")
logger.debug("–û–±—ã—á–Ω–æ–µ debug —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –º–∞—Ä–∫–µ—Ä–æ–≤")
logger.debug("–ï—â–µ –æ–¥–Ω–æ debug —Å–æ–æ–±—â–µ–Ω–∏–µ")
logger.debug("–¢—Ä–µ—Ç—å–µ debug —Å–æ–æ–±—â–µ–Ω–∏–µ")

print("\n=== –ü–†–û–í–ï–†–Ø–ï–ú ROOT LOGGER –ù–ê–°–¢–†–û–ô–ö–ò ===")

root_logger = logging.getLogger()
print(
    f"Root logger level: {root_logger.level} ({logging.getLevelName(root_logger.level)})"
)
print(f"Root logger handlers: {len(root_logger.handlers)}")

for i, handler in enumerate(root_logger.handlers):
    print(f"  Handler {i}: {type(handler).__name__}")
    print(f"    Level: {handler.level} ({logging.getLevelName(handler.level)})")
    print(f"    Filters: {len(handler.filters)}")
    for j, filter_obj in enumerate(handler.filters):
        print(f"      Filter {j}: {type(filter_obj).__name__}")
        if hasattr(filter_obj, "debug_mode"):
            print(f"        debug_mode: {filter_obj.debug_mode}")

print("\n=== TEST COMPLETE ===")
