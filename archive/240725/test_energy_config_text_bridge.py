#!/usr/bin/env python3
"""
–¢–µ—Å—Ç EnergyConfig —Å text_bridge –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ energy_flow
sys.path.append('energy_flow')

from energy_flow.config import create_debug_config, create_experiment_config, create_optimized_config

def test_energy_config_text_bridge():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ EnergyConfig —Å text_bridge –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏...")
    
    configs = {
        "debug": create_debug_config(),
        "experiment": create_experiment_config(), 
        "optimized": create_optimized_config()
    }
    
    for name, config in configs.items():
        print(f"\nüìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è {name.upper()}:")
        print(f"   –†–∞–∑–º–µ—Ä—ã —Ä–µ—à–µ—Ç–∫–∏: {config.lattice_width}√ó{config.lattice_height}√ó{config.lattice_depth}")
        print(f"   Surface dimension: {config.surface_dimension}")
        print(f"   Text bridge –≤–∫–ª—é—á–µ–Ω: {config.text_bridge_enabled}")
        
        if config.text_bridge_enabled:
            print(f"   Text cache –≤–∫–ª—é—á–µ–Ω: {config.text_cache_enabled}")
            print(f"   Text cache —Ä–∞–∑–º–µ—Ä: {config.text_cache_size}")
            print(f"   Text loss weight: {config.text_loss_weight}")
            print(f"   –ò—Ç–µ—Ä–∞—Ç–∏–≤–Ω—ã–µ —à–∞–≥–∏: {config.iterative_correction_steps}")
            print(f"   Max text length: {config.text_generation_max_length}")
            print(f"   Num beams: {config.text_generation_num_beams}")
            print(f"   Temperature: {config.text_generation_temperature}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é
        try:
            # –≠—Ç–æ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ –±–µ–∑ –æ—à–∏–±–æ–∫ –±–ª–∞–≥–æ–¥–∞—Ä—è __post_init__
            print(f"   ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–π–¥–µ–Ω–∞")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {e}")
    
    # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–º–∏ text_bridge –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    print(f"\nüö® –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:")
    
    try:
        from energy_flow.config.energy_config import EnergyConfig
        
        # –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º text_loss_weight
        invalid_config = EnergyConfig(
            lattice_width=10,
            lattice_height=10,
            lattice_depth=5,
            text_bridge_enabled=True,
            text_loss_weight=1.5  # –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ > 1.0
        )
        print("   ‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –ù–ï —Å—Ä–∞–±–æ—Ç–∞–ª–∞!")
        
    except AssertionError as e:
        print(f"   ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ä–∞–±–æ—Ç–∞–ª–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ: {e}")
    except Exception as e:
        print(f"   ‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç —Å–≤–æ–π—Å—Ç–≤–∞ surface_dimension
    print(f"\nüîç –¢–µ—Å—Ç –≤—ã—á–∏—Å–ª—è–µ–º—ã—Ö —Å–≤–æ–π—Å—Ç–≤:")
    debug_config = create_debug_config()
    expected_surface_dim = debug_config.lattice_width * debug_config.lattice_height
    actual_surface_dim = debug_config.surface_dimension
    
    print(f"   Expected surface_dimension: {expected_surface_dim}")
    print(f"   Actual surface_dimension: {actual_surface_dim}")
    print(f"   ‚úÖ –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ: {'YES' if expected_surface_dim == actual_surface_dim else 'NO'}")
    
    # –¢–µ—Å—Ç to_dict
    print(f"\nüìÑ –¢–µ—Å—Ç —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
    config_dict = debug_config.to_dict()
    text_bridge_keys = [k for k in config_dict.keys() if k.startswith('text_')]
    print(f"   Text bridge –∫–ª—é—á–∏ –≤ —Å–ª–æ–≤–∞—Ä–µ: {len(text_bridge_keys)}")
    for key in text_bridge_keys[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
        print(f"     {key}: {config_dict[key]}")
    if len(text_bridge_keys) > 5:
        print(f"     ... –∏ –µ—â–µ {len(text_bridge_keys) - 5}")
    
    print("\n‚úÖ –¢–µ—Å—Ç EnergyConfig —Å text_bridge –∑–∞–≤–µ—Ä—à–µ–Ω!")
    return True

if __name__ == "__main__":
    try:
        test_energy_config_text_bridge()
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")
        import traceback
        traceback.print_exc()