graph TB
    %% –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç Module 2
    subgraph "INPUT"
        EM[["Processed Embedding<br/>(768D –æ—Ç EmbeddingProcessor)"]]
    end
    
    %% –¢—Ä–∏ –ø–æ–¥—Ö–æ–¥–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è
    subgraph "DECODER SELECTION"
        DS["DecoderFactory<br/>Configuration-Based Selection"]
        
        DS --> PBD["PhraseBankDecoder<br/>üîπ Phrase-based"]
        DS --> GD["GenerativeDecoder<br/>üî∏ Neural Generation"]  
        DS --> HD["HybridDecoder<br/>üî∂ Combined Approach"]
    end
    
    %% PhraseBankDecoder –¥–µ—Ç–∞–ª–∏
    subgraph "PHRASE BANK APPROACH"
        PB["PhraseBank<br/>50K phrases"]
        IDX["FAISS Index<br/>Fast Search"]
        SIM["Similarity Matching<br/>Cosine Distance"]
        ASM["Text Assembly<br/>Coherent Output"]
        
        PBD --> PB
        PB --> IDX
        IDX --> SIM
        SIM --> ASM
    end
    
    %% GenerativeDecoder –¥–µ—Ç–∞–ª–∏  
    subgraph "GENERATIVE APPROACH"
        EMB["Embedding Input Layer<br/>768D ‚Üí Hidden"]
        TRF["Mini Transformer<br/>4 layers, 8 heads"]
        VOC["Vocabulary Projection<br/>32K tokens"]
        SAMP["Temperature Sampling<br/>Controlled Generation"]
        
        GD --> EMB
        EMB --> TRF
        TRF --> VOC
        VOC --> SAMP
    end
    
    %% HybridDecoder –¥–µ—Ç–∞–ª–∏
    subgraph "HYBRID APPROACH"
        CONF["Confidence Scoring<br/>Route Decision"]
        ROUTE["Dynamic Routing<br/>Phrase vs Generation"]
        COMB["Result Combination<br/>Quality Optimization"]
        
        HD --> CONF
        CONF --> ROUTE
        ROUTE --> PBD
        ROUTE --> GD
        PBD --> COMB
        GD --> COMB
    end
    
    %% –ö–∞—á–µ—Å—Ç–≤–æ –∏ –æ—Ü–µ–Ω–∫–∞
    subgraph "QUALITY ASSESSMENT"
        BLEU["BLEU Score<br/>Generation Quality"]
        ROUGE["ROUGE Score<br/>Summarization"]
        SEM["Semantic Similarity<br/>Meaning Preservation"]
        COH["Coherence Score<br/>Text Fluency"]
    end
    
    %% –í—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    subgraph "OUTPUT"
        TXT[["Generated Text<br/>Natural Language"]]
        METRICS[["Quality Metrics<br/>Performance Stats"]]
    end
    
    %% –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å–∏—Å—Ç–µ–º–æ–π
    subgraph "SYSTEM INTEGRATION"
        MOD1["Module 1<br/>TeacherLLMEncoder"]
        MOD2["Module 2<br/>EmbeddingProcessor"]
        MOD3["Module 3<br/>LightweightDecoder"]
        PIPE["End-to-End Pipeline<br/>Complete System"]
    end
    
    %% –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    subgraph "CONFIGURATION"
        YAML["lightweight_decoder.yaml<br/>Settings"]
        CACHE["CacheManager<br/>Performance"]
        ERR["Error Handling<br/>Fallbacks"]
    end
    
    %% –û—Å–Ω–æ–≤–Ω—ã–µ —Å–≤—è–∑–∏
    EM --> DS
    
    ASM --> TXT
    SAMP --> TXT
    COMB --> TXT
    
    TXT --> BLEU
    TXT --> ROUGE
    TXT --> SEM
    TXT --> COH
    
    BLEU --> METRICS
    ROUGE --> METRICS
    SEM --> METRICS
    COH --> METRICS
    
    %% –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
    MOD1 --> MOD2
    MOD2 --> MOD3
    MOD3 --> PIPE
    
    %% –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–≤—è–∑–∏
    YAML --> DS
    CACHE --> PBD
    CACHE --> GD
    ERR --> HD
    
    %% –°—Ç–∏–ª–∏ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    classDef input fill:#e1f5fe
    classDef decoder fill:#fff3e0
    classDef phrase fill:#f3e5f5
    classDef generative fill:#e8f5e8
    classDef hybrid fill:#fff8e1
    classDef quality fill:#fce4ec
    classDef output fill:#e0f2f1
    classDef system fill:#f1f8e9
    classDef config fill:#fafafa
    
    class EM input
    class DS,PBD,GD,HD decoder
    class PB,IDX,SIM,ASM phrase
    class EMB,TRF,VOC,SAMP generative
    class CONF,ROUTE,COMB hybrid
    class BLEU,ROUGE,SEM,COH quality
    class TXT,METRICS output
    class MOD1,MOD2,MOD3,PIPE system
    class YAML,CACHE,ERR config 